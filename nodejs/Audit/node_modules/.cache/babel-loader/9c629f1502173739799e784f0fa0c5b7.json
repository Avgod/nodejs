{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/nodejs/nodejs/Audit/src/components/projectData/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport * as XLSX from 'xlsx';\nimport { Table, Button, Space, Popconfirm, Upload, PageHeader, Input, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectData = () => {\n  _s();\n\n  // const [isTableVisible, setIsTableVisible] = useState(false);\n  const [showTable, setShowTable] = useState(false);\n  const [tableData, seTableData] = useState([]);\n  const [sendData, setSendData] = useState([]);\n  const [filterTable, setFilterTable] = useState(null);\n\n  const handleUpload = e => {\n    setShowTable(true);\n    console.log('file imported -->', e.file.name);\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      const data = e.target.result;\n      const wb = XLSX.read(data, {\n        type: 'binary'\n      });\n      const sheet = wb.SheetNames[0];\n      const excel = wb.Sheets[sheet];\n      const excel_data = XLSX.utils.sheet_to_json(excel).map(row => Object.keys(row).reduce((obj, key) => {\n        obj[key.trim()] = row[key];\n        return obj;\n      }, {}));\n      console.log('sheet data', excel_data);\n      seTableData(excel_data);\n      setSendData(excel_data);\n    };\n\n    reader.readAsBinaryString(e.file);\n  };\n\n  const TableColumns = [];\n  tableData.forEach((data, i) => {\n    for (const k in data) {\n      if (TableColumns.indexOf(k) === -1) {\n        TableColumns.push(k);\n      }\n    }\n  });\n  const TableColumnsData = [];\n  TableColumns.forEach((data, i) => {\n    TableColumnsData.push({\n      title: data,\n      dataIndex: data,\n      key: i,\n      width: 150\n    });\n  });\n\n  const handleSaveClick = sendData => {\n    console.log('send data', sendData);\n    fetch('http://localhost:4000/projectData/saveProjectData', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(sendData)\n    }).then(Data => {\n      console.log(Data);\n\n      if (Data.status === 201) {\n        message.success('File Uploaded');\n      } else {\n        message.error('File Not Uploaded');\n      }\n    });\n  };\n\n  const handleSearch = value => {\n    const filteredData = tableData.filter(key => Object.keys(key).some(data => String(key[data]).toLowerCase().includes(value.toLowerCase())));\n    setFilterTable(filteredData);\n  }; //   const showTable = () => {\n  //       setIsTableVisible(true);\n  //   }\n  //   const TeamColumns = [\n  //       {\n  //           title: 'SR No',\n  //           dataIndex: 'sr_no',\n  //           width: 120,\n  //       },\n  //       {\n  //         title: 'EMP ID',\n  //         dataIndex: 'emp_id',\n  //         width: 120,\n  //     },\n  //     {\n  //         title: 'EMP Name',\n  //         dataIndex: 'emp_name',\n  //         width: 120,\n  //     },\n  //     {\n  //         title: 'Role',\n  //         dataIndex: 'role',\n  //         width: 120,\n  //     },\n  //   ]\n  //   const TeamColumnData = [];\n  //   for (let i = 1; i < 4; i++) {\n  //         TeamColumnData.push({\n  //           key: i,\n  //           sr_no: `${i}`,\n  //           emp_id: `0${i}`,\n  //           emp_name: `Avin Employee ${i}`,\n  //           role: 'SE',\n  //         });\n  //   }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PageHeader, {\n          style: {\n            fontSize: '32px'\n          },\n          children: \"Project Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Input.Search, {\n            placeholder: \"Search by..\",\n            onSearch: handleSearch,\n            enterButton: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Upload, {\n            accept: \".xlsx, .xlsm\",\n            showUploadList: false,\n            beforeUpload: file => // Prevent upload\n            false,\n            onChange: handleUpload,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              children: [/*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), \"Upload Data\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            ghost: true,\n            onClick: () => handleSaveClick(sendData),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n            title: \"Are you sure delete this Record?\",\n            okText: \"Yes\",\n            cancelText: \"No\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              danger: true,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), showTable && /*#__PURE__*/_jsxDEV(Table, {\n      columns: TableColumnsData,\n      dataSource: filterTable === null ? tableData : filterTable,\n      scroll: {\n        x: 200,\n        y: 400\n      },\n      bordered: true,\n      pagination: false,\n      style: {\n        marginBottom: '30px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectData, \"dlqc7Ddm5cXiBc7BoNSoQXXnEpU=\");\n\n_c = ProjectData;\nexport default ProjectData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectData\");","map":{"version":3,"sources":["/home/ubuntu/nodejs/nodejs/Audit/src/components/projectData/index.js"],"names":["React","useState","XLSX","Table","Button","Space","Popconfirm","Upload","PageHeader","Input","message","UploadOutlined","ProjectData","showTable","setShowTable","tableData","seTableData","sendData","setSendData","filterTable","setFilterTable","handleUpload","e","console","log","file","name","reader","FileReader","onload","data","target","result","wb","read","type","sheet","SheetNames","excel","Sheets","excel_data","utils","sheet_to_json","map","row","Object","keys","reduce","obj","key","trim","readAsBinaryString","TableColumns","forEach","i","k","indexOf","push","TableColumnsData","title","dataIndex","width","handleSaveClick","fetch","method","headers","body","JSON","stringify","then","Data","status","success","error","handleSearch","value","filteredData","filter","some","String","toLowerCase","includes","display","alignItems","justifyContent","marginBottom","fontSize","x","y"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport * as XLSX from 'xlsx';\nimport {\n  Table, Button, Space, Popconfirm, Upload, PageHeader, Input, message\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\nconst ProjectData = () => {\n  // const [isTableVisible, setIsTableVisible] = useState(false);\n  const [showTable, setShowTable] = useState(false);\n  const [tableData, seTableData] = useState([]);\n  const [sendData, setSendData] = useState([]);\n  const [filterTable, setFilterTable] = useState(null);\n\n  const handleUpload = (e) => {\n    setShowTable(true);\n    console.log('file imported -->', e.file.name);\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      const data = e.target.result;\n      const wb = XLSX.read(data, { type: 'binary' });\n      const sheet = wb.SheetNames[0];\n      const excel = wb.Sheets[sheet];\n      const excel_data = XLSX.utils.sheet_to_json(excel).map((row) => Object.keys(row).reduce((obj, key) => {\n        obj[key.trim()] = row[key];\n        return obj;\n      }, {}));\n      console.log('sheet data', excel_data);\n      seTableData(excel_data);\n      setSendData(excel_data);\n    };\n    reader.readAsBinaryString(e.file);\n  };\n\n  const TableColumns = [];\n  tableData.forEach((data, i) => {\n    for (const k in data) {\n      if (TableColumns.indexOf(k) === -1) {\n        TableColumns.push(k);\n      }\n    }\n  });\n\n  const TableColumnsData = [];\n  TableColumns.forEach((data, i) => {\n    TableColumnsData.push({\n      title: data,\n      dataIndex: data,\n      key: i,\n      width: 150,\n    });\n  });\n\n  const handleSaveClick = (sendData) => {\n    console.log('send data', sendData);\n    fetch('http://localhost:4000/projectData/saveProjectData', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(sendData),\n    }).then((Data) => {\n      console.log(Data);\n      if(Data.status === 201) {\n        message.success('File Uploaded');\n      }\n      else{\n        message.error('File Not Uploaded');\n      }\n    });\n  };\n\n  const handleSearch = (value) => {\n    const filteredData = tableData.filter((key) => Object.keys(key).some((data) => String(key[data])\n      .toLowerCase()\n      .includes(value.toLowerCase())));\n    setFilterTable(filteredData);\n  };\n\n  //   const showTable = () => {\n  //       setIsTableVisible(true);\n  //   }\n\n  //   const TeamColumns = [\n  //       {\n  //           title: 'SR No',\n  //           dataIndex: 'sr_no',\n  //           width: 120,\n  //       },\n  //       {\n  //         title: 'EMP ID',\n  //         dataIndex: 'emp_id',\n  //         width: 120,\n  //     },\n  //     {\n  //         title: 'EMP Name',\n  //         dataIndex: 'emp_name',\n  //         width: 120,\n  //     },\n  //     {\n  //         title: 'Role',\n  //         dataIndex: 'role',\n  //         width: 120,\n  //     },\n  //   ]\n\n  //   const TeamColumnData = [];\n  //   for (let i = 1; i < 4; i++) {\n  //         TeamColumnData.push({\n  //           key: i,\n  //           sr_no: `${i}`,\n  //           emp_id: `0${i}`,\n  //           emp_name: `Avin Employee ${i}`,\n  //           role: 'SE',\n\n  //         });\n  //   }\n\n  return (\n    <div>\n      <div style={{\n        display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '20px',\n      }}\n      >\n        <div>\n          <PageHeader style={{ fontSize: '32px' }}>Project Data</PageHeader>\n        </div>\n        <div>\n          <Space>\n            <Input.Search placeholder=\"Search by..\" onSearch={handleSearch} enterButton />\n            <Upload\n              accept=\".xlsx, .xlsm\"\n              showUploadList={false}\n              beforeUpload={(file) =>\n              // Prevent upload\n                false}\n              onChange={handleUpload}\n            >\n              <Button type=\"primary\">\n                <UploadOutlined />\n                Upload Data\n              </Button>\n            </Upload>\n            <Button type=\"primary\" ghost onClick={() => handleSaveClick(sendData)}>Save</Button>\n            <Popconfirm title=\"Are you sure delete this Record?\" okText=\"Yes\" cancelText=\"No\">\n              <Button danger>Delete</Button>\n            </Popconfirm>\n          </Space>\n        </div>\n      </div>\n      {showTable && <Table columns={TableColumnsData} dataSource={filterTable === null ? tableData : filterTable} scroll={{ x: 200, y: 400 }} bordered pagination={false} style={{ marginBottom: '30px' }} />}\n      {/* {isTableVisible && <div><PageHeader style={{fontSize: '28px', marginBottom: '16px'}}>Team Details</PageHeader><Table columns={TableColumnsData} dataSource={tableData} pagination={false} bordered /></div> } */}\n    </div>\n  );\n};\n\nexport default ProjectData;\n"]},"metadata":{},"sourceType":"module"}