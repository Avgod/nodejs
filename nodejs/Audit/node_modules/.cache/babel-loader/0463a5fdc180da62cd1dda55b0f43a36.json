{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/nodejs/nodejs/Audit/src/components/employeeData/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport * as XLSX from 'xlsx';\nimport { Table, Button, Space, Popconfirm, Upload, PageHeader, Modal, Form, Input, Row, Col, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeeData = () => {\n  _s();\n\n  const [showTable, setShowTable] = useState(false);\n  const [tableData, setTableData] = useState([]);\n  const [sendData, setSendData] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [filterTable, setFilterTable] = useState(null);\n  const [form] = Form.useForm();\n\n  const handleUpload = e => {\n    setShowTable(true);\n    console.log('file imported -->', e.file.name);\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      const data = e.target.result;\n      const wb = XLSX.read(data, {\n        type: 'binary'\n      });\n      const sheet = wb.SheetNames[0];\n      const excel = wb.Sheets[sheet];\n      const excel_data = XLSX.utils.sheet_to_json(excel).map(row => Object.keys(row).reduce((obj, key) => {\n        obj[key.trim()] = row[key];\n        return obj;\n      }, {}));\n      console.log('sheet data', excel_data);\n      setTableData(excel_data);\n      setSendData(excel_data);\n    };\n\n    reader.readAsBinaryString(e.file);\n  };\n\n  const TableColumns = [];\n  tableData.forEach((data, i) => {\n    for (const k in data) {\n      if (TableColumns.indexOf(k) === -1) {\n        TableColumns.push(k);\n      }\n    }\n  });\n  const TableColumnsData = [];\n  TableColumns.forEach((data, i) => {\n    TableColumnsData.push({\n      title: data,\n      dataIndex: data,\n      key: i,\n      width: 150\n    });\n  });\n\n  const handleSaveClick = sendData => {\n    console.log('send data', sendData);\n    fetch('http://localhost:4000/employeeData/saveEmpDetails', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(sendData)\n    }).then(Data => {\n      console.log(\"res\", Data);\n\n      if (Data.status === 201) {\n        message.success('File Uploaded');\n      } else {\n        message.error('File Not Uploaded');\n      }\n    });\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  }; // const handleOk = () => {\n  //     setVisible(false);\n  // }\n\n\n  const handleCancel = () => {\n    setVisible(false);\n    form.resetFields();\n  };\n\n  const handleSubmit = values => {\n    setShowTable(true);\n    setVisible(false);\n    const formdata = [values];\n    setTableData(formdata);\n    setSendData(formdata);\n  };\n\n  const handleSearch = value => {\n    const filteredData = tableData.filter(key => Object.keys(key).some(data => String(key[data]).toLowerCase().includes(value.toLowerCase())));\n    setFilterTable(filteredData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        marginBottom: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PageHeader, {\n          style: {\n            fontSize: '32px'\n          },\n          children: \"Empoyee Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Input.Search, {\n            placeholder: \"Search by..\",\n            onSearch: handleSearch,\n            enterButton: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Upload, {\n            accept: \".xlsx, .xlsm\",\n            showUploadList: false,\n            beforeUpload: file => // Prevent upload\n            false,\n            onChange: handleUpload,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              children: [/*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), \"Upload Data\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: showModal,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            ghost: true,\n            onClick: () => handleSaveClick(sendData),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n            title: \"Are you sure delete this Record?\",\n            okText: \"Yes\",\n            cancelText: \"No\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              danger: true,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), showTable && /*#__PURE__*/_jsxDEV(Table, {\n      columns: TableColumnsData,\n      dataSource: filterTable === null ? tableData : filterTable,\n      pagination: false,\n      bordered: true,\n      scroll: {\n        x: 200,\n        y: 400\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Add Employee\",\n      visible: visible,\n      onOk: form.submit,\n      onCancel: handleCancel,\n      okText: \"Submit\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        form: form,\n        onFinish: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Employee ID\",\n              name: \"Emp ID\",\n              style: {\n                width: '90%'\n              },\n              rules: [{\n                required: true,\n                message: 'Please input your Employee ID!'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                placeholder: \"Employee ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Employee Name\",\n              name: \"Emp Name\",\n              style: {\n                width: '90%'\n              },\n              rules: [{\n                required: true,\n                message: 'Please input your Employee Name!'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                placeholder: \"Employee Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Email ID\",\n              name: \"Email ID\",\n              style: {\n                width: '90%'\n              },\n              rules: [{\n                required: true,\n                type: 'email',\n                message: 'Please enter valid Email ID!'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Department\",\n              name: \"Department\",\n              style: {\n                width: '90%'\n              },\n              rules: [{\n                required: true,\n                message: 'Please input your Department!'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                placeholder: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Role\",\n              name: \"Role\",\n              style: {\n                width: '90%'\n              },\n              rules: [{\n                required: true,\n                message: 'Please input your Role!'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                placeholder: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Manager ID\",\n              name: \"Manager ID\",\n              style: {\n                width: '90%'\n              },\n              rules: [{\n                required: true,\n                message: 'Please input your Manager ID!'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                placeholder: \"Manager ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeeData, \"xLkM6+lBLeita6CcYN9vYY+iEik=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = EmployeeData;\nexport default EmployeeData;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeData\");","map":{"version":3,"sources":["/home/ubuntu/nodejs/nodejs/Audit/src/components/employeeData/index.js"],"names":["React","useState","XLSX","Table","Button","Space","Popconfirm","Upload","PageHeader","Modal","Form","Input","Row","Col","message","UploadOutlined","EmployeeData","showTable","setShowTable","tableData","setTableData","sendData","setSendData","visible","setVisible","filterTable","setFilterTable","form","useForm","handleUpload","e","console","log","file","name","reader","FileReader","onload","data","target","result","wb","read","type","sheet","SheetNames","excel","Sheets","excel_data","utils","sheet_to_json","map","row","Object","keys","reduce","obj","key","trim","readAsBinaryString","TableColumns","forEach","i","k","indexOf","push","TableColumnsData","title","dataIndex","width","handleSaveClick","fetch","method","headers","body","JSON","stringify","then","Data","status","success","error","showModal","handleCancel","resetFields","handleSubmit","values","formdata","handleSearch","value","filteredData","filter","some","String","toLowerCase","includes","display","alignItems","justifyContent","marginBottom","fontSize","x","y","submit","required"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport * as XLSX from 'xlsx';\nimport {\n  Table, Button, Space, Popconfirm, Upload, PageHeader, Modal, Form, Input, Row, Col, message\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\nconst EmployeeData = () => {\n  const [showTable, setShowTable] = useState(false);\n  const [tableData, setTableData] = useState([]);\n  const [sendData, setSendData] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [filterTable, setFilterTable] = useState(null);\n  const [form] = Form.useForm();\n\n  const handleUpload = (e) => {\n    setShowTable(true);\n    console.log('file imported -->', e.file.name);\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      const data = e.target.result;\n      const wb = XLSX.read(data, { type: 'binary' });\n      const sheet = wb.SheetNames[0];\n      const excel = wb.Sheets[sheet];\n      const excel_data = XLSX.utils.sheet_to_json(excel).map((row) => Object.keys(row).reduce((obj, key) => {\n        obj[key.trim()] = row[key];\n        return obj;\n      }, {}));\n      console.log('sheet data', excel_data);\n      setTableData(excel_data);\n      setSendData(excel_data);\n    };\n    reader.readAsBinaryString(e.file);\n  };\n\n  const TableColumns = [];\n  tableData.forEach((data, i) => {\n    for (const k in data) {\n      if (TableColumns.indexOf(k) === -1) {\n        TableColumns.push(k);\n      }\n    }\n  });\n\n  const TableColumnsData = [];\n  TableColumns.forEach((data, i) => {\n    TableColumnsData.push({\n      title: data,\n      dataIndex: data,\n      key: i,\n      width: 150,\n    });\n  });\n\n  const handleSaveClick = (sendData) => {\n    console.log('send data', sendData);\n    fetch('http://localhost:4000/employeeData/saveEmpDetails', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(sendData),\n    }).then((Data) => {\n      console.log(\"res\",Data);\n      if(Data.status === 201) {\n        message.success('File Uploaded');\n      }\n      else{\n        message.error('File Not Uploaded');\n      }\n    });\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  // const handleOk = () => {\n  //     setVisible(false);\n  // }\n\n  const handleCancel = () => {\n    setVisible(false);\n    form.resetFields();\n  };\n\n  const handleSubmit = (values) => {\n    setShowTable(true);\n    setVisible(false);\n    const formdata = [values];\n    setTableData(formdata);\n    setSendData(formdata);\n  };\n\n  const handleSearch = (value) => {\n    const filteredData = tableData.filter((key) => Object.keys(key).some((data) => String(key[data])\n      .toLowerCase()\n      .includes(value.toLowerCase())));\n    setFilterTable(filteredData);\n  };\n\n  return (\n    <div>\n      <div style={{\n        display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '16px',\n      }}\n      >\n        <div>\n          <PageHeader style={{ fontSize: '32px' }}>Empoyee Data</PageHeader>\n        </div>\n        <div>\n          <Space>\n            <Input.Search placeholder=\"Search by..\" onSearch={handleSearch} enterButton />\n            <Upload\n              accept=\".xlsx, .xlsm\"\n              showUploadList={false}\n              beforeUpload={(file) =>\n                // Prevent upload\n                false}\n              onChange={handleUpload}\n            >\n              <Button type=\"primary\">\n                <UploadOutlined />\n                Upload Data\n</Button>\n            </Upload>\n            <Button type=\"primary\" onClick={showModal}>Add</Button>\n            <Button type=\"primary\" ghost onClick={() => handleSaveClick(sendData)}>Save</Button>\n            <Popconfirm title=\"Are you sure delete this Record?\" okText=\"Yes\" cancelText=\"No\">\n              <Button danger>Delete</Button>\n            </Popconfirm>\n          </Space>\n        </div>\n      </div>\n      {showTable && <Table columns={TableColumnsData} dataSource={filterTable === null ? tableData : filterTable} pagination={false} bordered scroll={{ x: 200, y: 400 }} />}\n      <Modal\n        title=\"Add Employee\"\n        visible={visible}\n        onOk={form.submit}\n        onCancel={handleCancel}\n        okText=\"Submit\"\n      >\n        <Form layout=\"vertical\" form={form} onFinish={handleSubmit}>\n          <Row>\n            <Col span={12}>\n              <Form.Item\n                label=\"Employee ID\"\nname=\"Emp ID\"\nstyle={{ width: '90%' }}\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your Employee ID!',\n                  },\n                ]}\n              >\n                <Input type=\"number\" placeholder=\"Employee ID\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"Employee Name\"\nname=\"Emp Name\"\nstyle={{ width: '90%' }}\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your Employee Name!',\n                  },\n                ]}\n              >\n                <Input type=\"text\" placeholder=\"Employee Name\" />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={12}>\n              <Form.Item\n                label=\"Email ID\"\nname=\"Email ID\"\nstyle={{ width: '90%' }}\n                rules={[\n                  {\n                    required: true,\n                    type: 'email',\n                    message: 'Please enter valid Email ID!',\n                  },\n                ]}\n              >\n                <Input placeholder=\"Email\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"Department\"\nname=\"Department\"\nstyle={{ width: '90%' }}\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your Department!',\n                  },\n                ]}\n              >\n                <Input type=\"text\" placeholder=\"Department\" />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={12}>\n              <Form.Item\n                label=\"Role\"\nname=\"Role\"\nstyle={{ width: '90%' }}\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your Role!',\n                  },\n                ]}\n              >\n                <Input type=\"text\" placeholder=\"Role\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"Manager ID\"\nname=\"Manager ID\"\nstyle={{ width: '90%' }}\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your Manager ID!',\n                  },\n                ]}\n              >\n                <Input type=\"number\" placeholder=\"Manager ID\" />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default EmployeeData;\n"]},"metadata":{},"sourceType":"module"}