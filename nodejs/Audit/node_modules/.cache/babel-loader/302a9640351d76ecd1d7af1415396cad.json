{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/nodejs/nodejs/Audit/src/components/Pvt.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pvt = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  const accessToken = localStorage.getItem('accessToken');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => accessToken !== null ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Pvt;\nexport default Pvt;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pvt\");","map":{"version":3,"sources":["/home/ubuntu/nodejs/nodejs/Audit/src/components/Pvt.js"],"names":["React","Route","Redirect","Pvt","component","Component","rest","accessToken","localStorage","getItem","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,MAAMC,GAAG,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAsC;AACjD,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAApB;AACA,sBACE;AAAA,2BACE,QAAC,KAAD,OACMH,IADN;AAEE,MAAA,MAAM,EAAGI,KAAD,IACNH,WAAW,KAAK,IAAhB,gBAAuB,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,cAAvB,gBAAkD,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAZD;;KAAMP,G;AAcN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst Pvt = ({ component: Component, ...rest }) => {\n  const accessToken = localStorage.getItem('accessToken');\n  return (\n    <div>\n      <Route\n        {...rest}\n        render={(props) => (\n          accessToken !== null ? <Component {...props} /> : <Redirect to=\"/\" />\n        )}\n      />\n    </div>\n  );\n};\n\nexport default Pvt;\n"]},"metadata":{},"sourceType":"module"}